
## M5STICKPLUS2 PARA COMPRA TRADE DE BITCOIN

## üîê Configura√ß√£o de Credenciais

As credenciais do Wi-Fi ficam armazenadas no arquivo `include/secrets.h`. **Nunca suba esse arquivo com os dados reais para o GitHub!**

Exemplo do conte√∫do de `secrets.h`:

```cpp
// secrets.h
#ifndef SECRETS_H
#define SECRETS_H

struct WiFiCredential {
  const char* ssid;
  const char* password;
};

const WiFiCredential wifiNetworks[] = {
  { "SUA_REDE_1", "SENHA_1" },
  { "SUA_REDE_2", "SENHA_2" }
};

const int wifiNetworkCount = sizeof(wifiNetworks) / sizeof(wifiNetworks[0]);

#endif


‚öôÔ∏è Plataforma e Depend√™ncias
Plataforma: M5StickCPlus2

Ambiente: PlatformIO no VS Code

Bibliotecas utilizadas:

M5StickCPlus2 (M5Unified)

WiFi

HTTPClient

ArduinoJson

üöÄ Configura√ß√£o do Projeto
Clone o reposit√≥rio:

bash
Copiar
Editar
git clone https://github.com/danielfmoraes/btc-monitor-m5stickplus.git
Configure as credenciais do Wi-Fi:

Edite o arquivo include/secrets.h com seu SSID e senha.

Abra o projeto no VS Code e use o PlatformIO para compilar e enviar o firmware para o dispositivo.

üì° Funcionamento
Atualiza√ß√£o dos Dados:
A cada 30 segundos, o dispositivo busca os dados do pre√ßo do Bitcoin utilizando a API do CoinGecko (do endpoint /coins/markets), exibindo:

Pre√ßo atual em USD e BRL.

Varia√ß√£o percentual de 1 hora e 24 horas.

Registro de Compra:
Ao pressionar o bot√£o A:

O pre√ßo atual (USD) √© registrado como pre√ßo de compra.

Uma mensagem de confirma√ß√£o "Comprado: $<valor>" √© exibida.

A partir da√≠, o display mostra a varia√ß√£o percentual do pre√ßo atual em rela√ß√£o ao pre√ßo de compra, com a cor indicando:

Verde: Alta.

Vermelho: Queda.

Reset:
O registro da compra √© mantido at√© o dispositivo ser reiniciado.
